{
  "hash": "f307220c1536ff55f60c3abaf4e83cc3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 3\"\nauthor: \"Varad\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggformula)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: scales\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nLoading required package: ggridges\n\nNew to ggformula?  Try the tutorials: \n\tlearnr::run_tutorial(\"introduction\", package = \"ggformula\")\n\tlearnr::run_tutorial(\"refining\", package = \"ggformula\")\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(mosaic)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following object is masked from 'package:scales':\n\n    rescale\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(kableExtra)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(skimr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntaxi <- read.csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/modeldata/taxi.csv\")\n\nhead(taxi)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  rownames tip distance              company local dow month hour\n1        1 yes    17.19 Chicago Independents    no Thu   Feb   16\n2        2 yes     0.88         City Service   yes Thu   Mar    8\n3        3 yes    18.11                other    no Mon   Feb   18\n4        4 yes    20.70 Chicago Independents    no Mon   Apr    8\n5        5 yes    12.23 Chicago Independents    no Sun   Mar   21\n6        6 yes     0.94             Sun Taxi   yes Sat   Apr   23\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninspect(taxi)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\ncategorical variables:  \n     name     class levels     n missing\n1     tip character      2 10000       0\n2 company character      7 10000       0\n3   local character      2 10000       0\n4     dow character      7 10000       0\n5   month character      4 10000       0\n                                   distribution\n1 yes (92.1%), no (7.9%)                       \n2 other (27.1%) ...                            \n3 no (81.2%), yes (18.8%)                      \n4 Thu (19.6%), Wed (17.5%), Tue (16.3%) ...    \n5 Apr (31.8%), Mar (31.4%), Feb (20.4%) ...    \n\nquantitative variables:  \n      name   class min      Q1  median        Q3     max        mean\n1 rownames integer   1 2500.75 5000.50 7500.2500 10000.0 5000.500000\n2 distance numeric   0    0.94    1.78   15.5625    42.3    6.224144\n3     hour integer   0   11.00   15.00   18.0000    23.0   14.177300\n           sd     n missing\n1 2886.895680 10000       0\n2    7.381397 10000       0\n3    4.359904 10000       0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(taxi)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 10,000\nColumns: 8\n$ rownames <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ tip      <chr> \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"…\n$ distance <dbl> 17.19, 0.88, 18.11, 20.70, 12.23, 0.94, 17.47, 17.67, 1.85, 1…\n$ company  <chr> \"Chicago Independents\", \"City Service\", \"other\", \"Chicago Ind…\n$ local    <chr> \"no\", \"yes\", \"no\", \"no\", \"no\", \"yes\", \"no\", \"no\", \"no\", \"no\",…\n$ dow      <chr> \"Thu\", \"Thu\", \"Mon\", \"Mon\", \"Sun\", \"Sat\", \"Fri\", \"Sun\", \"Fri\"…\n$ month    <chr> \"Feb\", \"Mar\", \"Feb\", \"Apr\", \"Mar\", \"Apr\", \"Mar\", \"Jan\", \"Apr\"…\n$ hour     <int> 16, 8, 18, 8, 21, 23, 12, 6, 12, 14, 18, 11, 12, 19, 17, 13, …\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nskim(taxi)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |      |\n|:------------------------|:-----|\n|Name                     |taxi  |\n|Number of rows           |10000 |\n|Number of columns        |8     |\n|_______________________  |      |\n|Column type frequency:   |      |\n|character                |5     |\n|numeric                  |3     |\n|________________________ |      |\n|Group variables          |None  |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|tip           |         0|             1|   2|   3|     0|        2|          0|\n|company       |         0|             1|   5|  28|     0|        7|          0|\n|local         |         0|             1|   2|   3|     0|        2|          0|\n|dow           |         0|             1|   3|   3|     0|        7|          0|\n|month         |         0|             1|   3|   3|     0|        4|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|    mean|      sd| p0|     p25|     p50|     p75|    p100|hist  |\n|:-------------|---------:|-------------:|-------:|-------:|--:|-------:|-------:|-------:|-------:|:-----|\n|rownames      |         0|             1| 5000.50| 2886.90|  1| 2500.75| 5000.50| 7500.25| 10000.0|▇▇▇▇▇ |\n|distance      |         0|             1|    6.22|    7.38|  0|    0.94|    1.78|   15.56|    42.3|▇▁▂▁▁ |\n|hour          |         0|             1|   14.18|    4.36|  0|   11.00|   15.00|   18.00|    23.0|▁▃▅▇▃ |\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntaxi_modified <- taxi %>% \n  mutate(\n    dow= factor(dow,\n    levels= c(\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"),\n    labels= c(\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"),          \n    ordered= TRUE\n    ),\n    \n    \n    local= factor(local,\n    levels= c(\"yes\",\"no\"),\n    labels= c(\"Yes\",\"No\"),\n    ordered= TRUE\n    ),\n    \n    month= factor(month,\n    levels= c(\"Jan\", \"Feb\", \"Mar\", \"Apr\"),\n    labels= c(\"Jan\", \"Feb\", \"Mar\", \"Apr\"),\n    ordered= TRUE\n    )\n  )\n\nglimpse(taxi_modified)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 10,000\nColumns: 8\n$ rownames <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ tip      <chr> \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"…\n$ distance <dbl> 17.19, 0.88, 18.11, 20.70, 12.23, 0.94, 17.47, 17.67, 1.85, 1…\n$ company  <chr> \"Chicago Independents\", \"City Service\", \"other\", \"Chicago Ind…\n$ local    <ord> No, Yes, No, No, No, Yes, No, No, No, No, No, No, No, Yes, No…\n$ dow      <ord> Thu, Thu, Mon, Mon, Sun, Sat, Fri, Sun, Fri, Tue, Tue, Sun, W…\n$ month    <ord> Feb, Mar, Feb, Apr, Mar, Apr, Mar, Jan, Apr, Mar, Mar, Apr, A…\n$ hour     <int> 16, 8, 18, 8, 21, 23, 12, 6, 12, 14, 18, 11, 12, 19, 17, 13, …\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_bar(~ tip, data = taxi_modified) %>%\n  gf_labs(title = \"Plot 1A: Counts of Tips\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#The quantity on left side of tilde ~ sign is the data on y axis.If it is unspecified, the default data is number of elements (Count)\n#The data on left side of tilde~ sign is data on x axis\n\n#Data='Database_Name' tells it where to find data from\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_bar(~ tip, color = ~local, data = taxi_modified) %>%\n  gf_labs(title = \"Plot 1A: Counts of Tips\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#The quantity on left side of tilde ~ sign is the data on y axis.If it is unspecified, the default data is number of elements (Count)\n#The data on left side of tilde~ sign is data on x axis\n\n#Data='Database_Name' tells it where to find data.\n\n#The Color function divides the variables on x axis by changing the color of the OUTLINE only. [Color= ~Variable_Name] Tells which variable to colorize\n\n#Gf labs is for altering text & titles\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_bar(~ tip, fill = ~local, data = taxi_modified) %>%\n  gf_labs(title = \"Plot 1A: Counts of Tips\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#The quantity on left side of tilde ~ sign is the data on y axis.If it is unspecified, the default data is number of elements (Count)\n#The data on left side of tilde~ sign is data on x axis\n\n#Data='Database_Name' tells it where to find data.\n\n#The Color function divides the variables on x axis by changing the color of the OUTLINE only.[Color= ~Variable_Name] Tells which variable to colorize\n\n#The Fill function divides the variables on x axis by changing the color of the WHOLE BAR [Fill= ~Variable_Name] Tells which variable to colorize fully\n#Fill & Color thus do same thing but for whole bar or only outline\n\n#gf_labs is for altering text & titles\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_bar(~ local, fill = ~tip, data = taxi_modified) %>%\n  gf_labs(title = \"Plot 1A: Counts of Tips\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#The quantity on left side of tilde ~ sign is the data on y axis.If it is unspecified, the default data is number of elements (Count)\n#The data on left side of tilde~ sign is data on x axis\n\n#Data='Database_Name' tells it where to find data.\n\n#The Color function divides the variables on x axis by changing the color of the OUTLINE only.[Color= ~Variable_Name] Tells which variable to colorize\n\n#The Fill function divides the variables on x axis by changing the color of the WHOLE BAR [Fill= ~Variable_Name] Tells which variable to colorize fully\n#Fill & Color thus do same thing but for whole bar or only outline\n\n#gf_labs is for altering text & titles\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_bar(~ dow, fill = ~tip, color = ~local, data = taxi_modified) %>%\n  gf_labs(title = \"Plot 1A: Counts of Tips\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#Here we have used Color & Fill both at the same time\n\n#The quantity on left side of tilde ~ sign is the data on y axis.If it is unspecified, the default data is number of elements (Count)\n#The data on left side of tilde~ sign is data on x axis\n\n#Data='Database_Name' tells it where to find data.\n\n#The Color function divides the variables on x axis by changing the color of the OUTLINE only.[Color= ~Variable_Name] Tells which variable to colorize\n\n#The Fill function divides the variables on x axis by changing the color of the WHOLE BAR [Fill= ~Variable_Name] Tells which variable to colorize fully\n#Fill & Color thus do same thing but for whole bar or only outline\n\n#gf_labs is for altering text & titles\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_bar(~ tip, fill = ~local,position=\"dodge\", data = taxi_modified) %>%\n  gf_labs(title = \"Plot 1A: Counts of Tips\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#The quantity on left side of tilde ~ sign is the data on y axis.If it is unspecified, the default data is number of elements (Count)\n#The data on left side of tilde~ sign is data on x axis\n\n#Data='Database_Name' tells it where to find data.\n\n#The Color function divides the variables on x axis by changing the color of the OUTLINE only.[Color= ~Variable_Name] Tells which variable to colorize\n\n#The Fill function divides the variables on x axis by changing the color of the WHOLE BAR [Fill= ~Variable_Name] Tells which variable to colorize fully\n#Fill & Color thus do same thing but for whole bar or only outline\n\n#The Position function decides position of bars\n#TThe 'Dodge' command under position places colorized bar graphs beside each other instead of on top\n\n#gf_labs is for altering text & titles\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_bar(~ local, fill = ~tip, position=\"fill\", data = taxi_modified) %>%\n  gf_labs(title = \"Plot 1A: Counts of Tips\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#The quantity on left side of tilde ~ sign is the data on y axis.If it is unspecified, the default data is number of elements (Count)\n#The data on left side of tilde~ sign is data on x axis\n\n#Data='Database_Name' tells it where to find data.\n\n#The Color function divides the variables on x axis by changing the color of the OUTLINE only.[Color= ~Variable_Name] Tells which variable to colorize\n\n#The Fill function divides the variables on x axis by changing the color of the WHOLE BAR [Fill= ~Variable_Name] Tells which variable to colorize fully\n#Fill & Color thus do same thing but for whole bar or only outline\n\n#The Position function decides position of bars\n#TThe 'Dodge' command (under Position function) places colorized bar graphs beside each other instead of on top\n\n#The 'Fill' command (under Position function) makes all the bars proportionate & equally sized so you can compare ratios & percentages\n\n##DO NOT CONFUSE FILL COMMAND WITH FILL FUNCTION\n\n#FILL FUNCTION COLORIZES FULL BAR BY A VARIABLE\n#FILL COMMAND (UNDER POSITION FUNCTION) MAKES BARS PROPORTIONATE\n\n#gf_labs is for altering text & titles\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_bar(~ company, fill = ~tip, position=\"fill\", data = taxi_modified) %>%\n  gf_labs(title = \"Plot 1A: Counts of Tips\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_bar(~hour , fill = ~tip, data = taxi_modified) %>%\n  gf_labs(title = \"Plot 1A: Counts of Tips\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_bar(~hour , fill = ~tip,position = \"fill\", data = taxi_modified) %>%\n  gf_labs(title = \"Plot 1A: Counts of Tips\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_bar(~month , fill = ~tip, data = taxi_modified) %>%\n  gf_labs(title = \"Plot 1A: Counts of Tips\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_bar(~month , fill = ~tip, position='fill', data = taxi_modified) %>%\n  gf_labs(title = \"Plot 1A: Counts of Tips\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_bar(~month | dow , fill = ~tip, data = taxi_modified) %>%\n  gf_labs(title = \"Plot 1A: Counts of Tips\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#The quantity on left side of tilde ~ sign is the data on y axis.If it is unspecified, the default data is number of elements (Count)\n#The data on left side of tilde~ sign is data on x axis\n\n#When you put 2 variables after tilde~, [Var_1 | Var_2], it makes separate graphs based on Var_2 & each graph has Var_1 on X Axis\n\n#Data='Database_Name' tells it where to find data.\n\n#The Color function divides the variables on x axis by changing the color of the OUTLINE only.[Color= ~Variable_Name] Tells which variable to colorize\n\n#The Fill function divides the variables on x axis by changing the color of the WHOLE BAR [Fill= ~Variable_Name] Tells which variable to colorize fully\n#Fill & Color thus do same thing but for whole bar or only outline\n\n#The Position function decides position of bars\n#TThe 'Dodge' command (under Position function) places colorized bar graphs beside each other instead of on top\n\n#The 'Fill' command (under Position function) makes all the bars proportionate & equally sized so you can compare ratios & percentages\n\n##DO NOT CONFUSE FILL COMMAND WITH FILL FUNCTION\n\n#FILL FUNCTION COLORIZES FULL BAR BY A VARIABLE\n#FILL COMMAND (UNDER POSITION FUNCTION) MAKES BARS PROPORTIONATE\n\n\n#gf_labs is for altering text & titles\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_bar(~dow | month , fill = ~tip, data = taxi_modified) %>%\n  gf_labs(title = \"Plot 1A: Counts of Tips\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_bar(~dow | company , fill = ~tip, data = taxi_modified) %>%\n  gf_labs(title = \"Tips by Company & Day\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_bar(~dow | company ,  data = taxi_modified) %>%\n  gf_labs(title = \"Plot 1A: Counts\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_bar(~company | dow ,  data = taxi_modified) %>%\n  gf_labs(title = \"Plot 1A: Counts\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_bar(~dow | company , fill = ~tip, position = \"fill\", data = taxi_modified) %>%\n  gf_labs(title = \"Tips Proportion by Company & Day\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_bar(~company | dow , fill = ~tip, position = \"fill\", data = taxi_modified) %>%\n  gf_labs(title = \"Tips Proportion by Company & Day\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nchesso <- read_delim(file = '../../datasets/openings.csv', delim = ',')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNew names:\nRows: 1884 Columns: 26\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(13): Opening, Colour, ECO, Moves, moves_list, move1w, move1b, move2w, ... dbl\n(12): ...1, Num Games, Perf Rating, Avg Player, Player Win %, Draw %, O... date\n(1): Last Played\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n```\n\n\n:::\n\n```{.r .cell-code}\nchesso\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,884 × 26\n    ...1 Opening            Colour `Num Games` ECO   `Last Played` `Perf Rating`\n   <dbl> <chr>              <chr>        <dbl> <chr> <date>                <dbl>\n 1     0 Alekhine Defense,… white          692 B03   2018-06-22             2247\n 2     1 Alekhine Defense,… black          228 B02   2018-06-27             2145\n 3     2 Alekhine Defense,… white         6485 B03   2018-07-06             2244\n 4     3 Alekhine Defense,… white          881 B03   2018-06-20             2187\n 5     4 Alekhine Defense,… black          259 B03   2018-05-20             2122\n 6     5 Alekhine Defense,… white         1207 B03   2018-07-01             2243\n 7     6 Alekhine Defense,… black          323 B03   2018-05-10             2231\n 8     7 Alekhine Defense,… black          524 B02   2018-06-29             2032\n 9     8 Alekhine Defense,… white          334 B02   2018-06-27             2205\n10     9 Alekhine Defense,… white          931 B02   2018-07-09             2174\n# ℹ 1,874 more rows\n# ℹ 19 more variables: `Avg Player` <dbl>, `Player Win %` <dbl>,\n#   `Draw %` <dbl>, `Opponent Win %` <dbl>, Moves <chr>, moves_list <chr>,\n#   move1w <chr>, move1b <chr>, move2w <chr>, move2b <chr>, move3w <chr>,\n#   move3b <chr>, move4w <chr>, move4b <chr>, `White_win%` <dbl>,\n#   `Black_win%` <dbl>, White_odds <dbl>, White_Wins <dbl>, Black_Wins <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(chesso)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"...1\"           \"Opening\"        \"Colour\"         \"Num Games\"     \n [5] \"ECO\"            \"Last Played\"    \"Perf Rating\"    \"Avg Player\"    \n [9] \"Player Win %\"   \"Draw %\"         \"Opponent Win %\" \"Moves\"         \n[13] \"moves_list\"     \"move1w\"         \"move1b\"         \"move2w\"        \n[17] \"move2b\"         \"move3w\"         \"move3b\"         \"move4w\"        \n[21] \"move4b\"         \"White_win%\"     \"Black_win%\"     \"White_odds\"    \n[25] \"White_Wins\"     \"Black_Wins\"    \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nchesso_modified <-chesso %>% \n  select(-1)\nchesso_modified\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,884 × 25\n   Opening     Colour `Num Games` ECO   `Last Played` `Perf Rating` `Avg Player`\n   <chr>       <chr>        <dbl> <chr> <date>                <dbl>        <dbl>\n 1 Alekhine D… white          692 B03   2018-06-22             2247         2225\n 2 Alekhine D… black          228 B02   2018-06-27             2145         2193\n 3 Alekhine D… white         6485 B03   2018-07-06             2244         2194\n 4 Alekhine D… white          881 B03   2018-06-20             2187         2130\n 5 Alekhine D… black          259 B03   2018-05-20             2122         2178\n 6 Alekhine D… white         1207 B03   2018-07-01             2243         2190\n 7 Alekhine D… black          323 B03   2018-05-10             2231         2277\n 8 Alekhine D… black          524 B02   2018-06-29             2032         2077\n 9 Alekhine D… white          334 B02   2018-06-27             2205         2178\n10 Alekhine D… white          931 B02   2018-07-09             2174         2174\n# ℹ 1,874 more rows\n# ℹ 18 more variables: `Player Win %` <dbl>, `Draw %` <dbl>,\n#   `Opponent Win %` <dbl>, Moves <chr>, moves_list <chr>, move1w <chr>,\n#   move1b <chr>, move2w <chr>, move2b <chr>, move3w <chr>, move3b <chr>,\n#   move4w <chr>, move4b <chr>, `White_win%` <dbl>, `Black_win%` <dbl>,\n#   White_odds <dbl>, White_Wins <dbl>, Black_Wins <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(chesso_modified)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,884\nColumns: 25\n$ Opening          <chr> \"Alekhine Defense, Balogh Variation\", \"Alekhine Defen…\n$ Colour           <chr> \"white\", \"black\", \"white\", \"white\", \"black\", \"white\",…\n$ `Num Games`      <dbl> 692, 228, 6485, 881, 259, 1207, 323, 524, 334, 931, 5…\n$ ECO              <chr> \"B03\", \"B02\", \"B03\", \"B03\", \"B03\", \"B03\", \"B03\", \"B02…\n$ `Last Played`    <date> 2018-06-22, 2018-06-27, 2018-07-06, 2018-06-20, 2018…\n$ `Perf Rating`    <dbl> 2247, 2145, 2244, 2187, 2122, 2243, 2231, 2032, 2205,…\n$ `Avg Player`     <dbl> 2225, 2193, 2194, 2130, 2178, 2190, 2277, 2077, 2178,…\n$ `Player Win %`   <dbl> 40.8, 29.8, 40.8, 39.7, 37.8, 41.0, 35.9, 42.2, 34.1,…\n$ `Draw %`         <dbl> 24.3, 22.4, 27.7, 23.2, 21.2, 25.9, 24.8, 25.0, 23.6,…\n$ `Opponent Win %` <dbl> 35.0, 47.8, 31.5, 37.1, 40.9, 33.1, 39.3, 32.8, 42.2,…\n$ Moves            <chr> \"1.e4 Nf6 2.e5 Nd5 3.d4 d6 4.Bc4\", \"1.e4 Nf6 2.e5 Ng8…\n$ moves_list       <chr> \"['1.e4', 'Nf6', '2.e5', 'Nd5', '3.d4', 'd6', '4.Bc4'…\n$ move1w           <chr> \"e4\", \"e4\", \"e4\", \"e4\", \"e4\", \"e4\", \"e4\", \"e4\", \"e4\",…\n$ move1b           <chr> \"Nf6\", \"Nf6\", \"Nf6\", \"Nf6\", \"Nf6\", \"Nf6\", \"Nf6\", \"Nf6…\n$ move2w           <chr> \"e5\", \"e5\", \"e5\", \"e5\", \"e5\", \"e5\", \"e5\", NA, \"e5\", \"…\n$ move2b           <chr> \"Nd5\", \"Ng8\", \"Nd5\", \"Nd5\", \"Nd5\", \"Nd5\", \"Nd5\", NA, …\n$ move3w           <chr> \"d4\", NA, \"d4\", \"d4\", \"d4\", \"d4\", \"d4\", NA, \"c4\", NA,…\n$ move3b           <chr> \"d6\", NA, \"d6\", \"d6\", \"d6\", \"d6\", \"d6\", NA, \"Nb6\", NA…\n$ move4w           <chr> \"Bc4\", NA, \"c4\", \"c4\", \"c4\", \"c4\", \"c4\", NA, \"c5\", NA…\n$ move4b           <chr> NA, NA, \"Nb6\", \"Nb6\", \"Nb6\", \"Nb6\", \"Nb6\", NA, \"Nd5\",…\n$ `White_win%`     <dbl> 40.8, 47.8, 40.8, 39.7, 40.9, 41.0, 39.3, 32.8, 34.1,…\n$ `Black_win%`     <dbl> 35.0, 29.8, 31.5, 37.1, 37.8, 33.1, 35.9, 42.2, 42.2,…\n$ White_odds       <dbl> 1.1657143, 1.6040268, 1.2952381, 1.0700809, 1.0820106…\n$ White_Wins       <dbl> 282.336, 108.984, 2645.880, 349.757, 105.931, 494.870…\n$ Black_Wins       <dbl> 242.200, 67.944, 2042.775, 326.851, 97.902, 399.517, …\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninspect(chesso_modified)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\ncategorical variables:  \n         name     class levels    n missing\n1     Opening character   1755 1884       0\n2      Colour character      2 1884       0\n3         ECO character    493 1884       0\n4       Moves character   1884 1884       0\n5  moves_list character   1884 1884       0\n6      move1w character     17 1884       0\n7      move1b character     13 1869      15\n8      move2w character     31 1814      70\n9      move2b character     41 1744     140\n10     move3w character     43 1628     256\n11     move3b character     61 1501     383\n12     move4w character     67 1340     544\n13     move4b character     81 1186     698\n                                    distribution\n1   (%) ...                                     \n2  black (52.7%), white (47.3%)                 \n3  A00 (1.8%), B00 (1.2%), B01 (1.2%) ...       \n4  1.00E+03 (0.1%), 1.00E+04 (0.1%) ...         \n5  ['1.00E+03'] (0.1%) ...                      \n6  e4 (50.4%), d4 (39%), c4 (5.5%) ...          \n7  Nf6 (24.4%), e5 (22.8%), d5 (17.8%) ...      \n8  c4 (35.3%), Nf3 (33.1%), d4 (13.2%) ...      \n9  Nc6 (19.4%), e6 (19.2%), d5 (11.6%) ...      \n10 Nc3 (32.3%), d4 (16.1%), Nf3 (11.3%) ...     \n11 Nf6 (20%), cxd4 (11.4%), a6 (6.8%) ...       \n12 Nxd4 (13.7%), Nf3 (12.8%), Nc3 (6.6%) ...    \n13 Nf6 (20.6%), d6 (9.3%), Bg7 (7.3%) ...       \n\nDate variables:  \n         name class      first       last min_diff  max_diff    n missing\n1 Last Played  Date 2010-04-10 2018-07-09   0 days 1799 days 1884       0\n\nquantitative variables:  \n             name   class         min          Q1      median          Q3\n1       Num Games numeric  100.000000  314.750000  788.500000 2225.000000\n2     Perf Rating numeric 1583.000000 2157.000000 2252.500000 2329.000000\n3      Avg Player numeric 1577.000000 2166.000000 2255.000000 2326.000000\n4    Player Win % numeric    7.500000   28.900000   35.100000   41.125000\n5          Draw % numeric    4.000000   24.500000   29.400000   34.625000\n6  Opponent Win % numeric    6.700000   28.900000   34.650000   40.525000\n7      White_win% numeric   13.600000   34.800000   39.100000   44.000000\n8      Black_win% numeric    6.700000   25.100000   29.900000   35.000000\n9      White_odds numeric    0.308642    1.037277    1.325008    1.674116\n10     White_Wins numeric   21.000000  124.740500  310.274000  824.243000\n11     Black_Wins numeric    8.946000   91.026250  230.952000  651.262750\n            max        mean           sd    n missing\n1  22482.000000 1846.019108 2739.1034624 1884       0\n2   2536.000000 2235.945860  135.2603918 1884       0\n3   2492.000000 2236.531847  127.7237108 1884       0\n4     77.600000   35.159395    9.0771393 1884       0\n5     68.500000   29.914066    8.0430433 1884       0\n6     77.500000   34.928715    9.1804503 1884       0\n7     77.600000   39.745701    7.6711076 1884       0\n8     64.800000   30.342410    7.9763046 1884       0\n9      9.810127    1.448725    0.6739913 1884       0\n10  8295.858000  708.835970 1037.0276692 1884       0\n11  8700.534000  557.051955  866.7888314 1884       0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nskim(chesso_modified)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                |\n|:------------------------|:---------------|\n|Name                     |chesso_modified |\n|Number of rows           |1884            |\n|Number of columns        |25              |\n|_______________________  |                |\n|Column type frequency:   |                |\n|character                |13              |\n|Date                     |1               |\n|numeric                  |11              |\n|________________________ |                |\n|Group variables          |None            |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Opening       |         0|          1.00|  11|  90|     0|     1755|          0|\n|Colour        |         0|          1.00|   5|   5|     0|        2|          0|\n|ECO           |         0|          1.00|   3|   6|     0|      493|          0|\n|Moves         |         0|          1.00|   4| 143|     0|     1884|          0|\n|moves_list    |         0|          1.00|   8| 225|     0|     1884|          0|\n|move1w        |         0|          1.00|   2|   6|     0|       17|          0|\n|move1b        |        15|          0.99|   2|   3|     0|       13|          0|\n|move2w        |        70|          0.96|   2|   4|     0|       31|          0|\n|move2b        |       140|          0.93|   2|   4|     0|       41|          0|\n|move3w        |       256|          0.86|   2|   4|     0|       43|          0|\n|move3b        |       383|          0.80|   2|   4|     0|       61|          0|\n|move4w        |       544|          0.71|   2|   5|     0|       67|          0|\n|move4b        |       698|          0.63|   2|   5|     0|       81|          0|\n\n\n**Variable type: Date**\n\n|skim_variable | n_missing| complete_rate|min        |max        |median     | n_unique|\n|:-------------|---------:|-------------:|:----------|:----------|:----------|--------:|\n|Last Played   |         0|             1|2010-04-10 |2018-07-09 |2018-06-29 |      195|\n\n\n**Variable type: numeric**\n\n|skim_variable  | n_missing| complete_rate|    mean|      sd|      p0|     p25|     p50|     p75|     p100|hist  |\n|:--------------|---------:|-------------:|-------:|-------:|-------:|-------:|-------:|-------:|--------:|:-----|\n|Num Games      |         0|             1| 1846.02| 2739.10|  100.00|  314.75|  788.50| 2225.00| 22482.00|▇▁▁▁▁ |\n|Perf Rating    |         0|             1| 2235.95|  135.26| 1583.00| 2157.00| 2252.50| 2329.00|  2536.00|▁▁▃▇▃ |\n|Avg Player     |         0|             1| 2236.53|  127.72| 1577.00| 2166.00| 2255.00| 2326.00|  2492.00|▁▁▂▇▅ |\n|Player Win %   |         0|             1|   35.16|    9.08|    7.50|   28.90|   35.10|   41.12|    77.60|▁▇▇▁▁ |\n|Draw %         |         0|             1|   29.91|    8.04|    4.00|   24.50|   29.40|   34.62|    68.50|▁▇▇▁▁ |\n|Opponent Win % |         0|             1|   34.93|    9.18|    6.70|   28.90|   34.65|   40.52|    77.50|▁▇▇▁▁ |\n|White_win%     |         0|             1|   39.75|    7.67|   13.60|   34.80|   39.10|   44.00|    77.60|▁▇▇▁▁ |\n|Black_win%     |         0|             1|   30.34|    7.98|    6.70|   25.10|   29.90|   35.00|    64.80|▁▇▇▁▁ |\n|White_odds     |         0|             1|    1.45|    0.67|    0.31|    1.04|    1.33|    1.67|     9.81|▇▁▁▁▁ |\n|White_Wins     |         0|             1|  708.84| 1037.03|   21.00|  124.74|  310.27|  824.24|  8295.86|▇▁▁▁▁ |\n|Black_Wins     |         0|             1|  557.05|  866.79|    8.95|   91.03|  230.95|  651.26|  8700.53|▇▁▁▁▁ |\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## HOW TO FILTER OPENINGS WHICH INCLUDE A SPECIFIC NAME BUT NOT WHOLE NAME IS SAME?\n## E.g. ALL OPENING VARIATIONS WITH WORDS 'NIMZO-INDIAN' IN THEM? \n\n#chesso_modified %>% filter(dplyr::contains(vars = Opening, \"Nimzo-Indian Defense\"))\n#This does not work\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#chesso_modified %>% select(contains('Nimzo-Indian Defense'))\n#This does not work\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nchesso_modified %>% filter(grepl('Nimzo-Indian Defense', Opening))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 66 × 25\n   Opening     Colour `Num Games` ECO   `Last Played` `Perf Rating` `Avg Player`\n   <chr>       <chr>        <dbl> <chr> <date>                <dbl>        <dbl>\n 1 Nimzo-Indi… white         9585 E32   2018-07-08             2352         2311\n 2 Nimzo-Indi… black         4205 E38   2018-07-09             2246         2286\n 3 Nimzo-Indi… white          380 E39   2018-06-26             2521         2475\n 4 Nimzo-Indi… black         4742 E32   2018-07-08             2380         2411\n 5 Nimzo-Indi… black         1913 E39   2018-06-20             2358         2381\n 6 Nimzo-Indi… black         1483 E33   2018-07-09             2293         2327\n 7 Nimzo-Indi… black         2253 E34   2018-07-08             2291         2328\n 8 Nimzo-Indi… white          696 E37   2018-07-05             2475         2407\n 9 Nimzo-Indi… white          760 E36   2018-07-05             2389         2350\n10 Nimzo-Indi… black          924 E35   2018-07-08             2415         2466\n# ℹ 56 more rows\n# ℹ 18 more variables: `Player Win %` <dbl>, `Draw %` <dbl>,\n#   `Opponent Win %` <dbl>, Moves <chr>, moves_list <chr>, move1w <chr>,\n#   move1b <chr>, move2w <chr>, move2b <chr>, move3w <chr>, move3b <chr>,\n#   move4w <chr>, move4b <chr>, `White_win%` <dbl>, `Black_win%` <dbl>,\n#   White_odds <dbl>, White_Wins <dbl>, Black_Wins <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\n#HELL YES. YOU CAN NOW FILTER ROWS WITH A CERTAIN STRING IN A SPECIFIC COLUMN\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nchesso_vienna <- chesso_modified %>% filter(grepl('Vienna Game', Opening))\n\n#HELL YES. YOU CAN NOW FILTER ROWS WITH A CERTAIN STRING IN A SPECIFIC COLUMN\n\n(chesso_vienna) #Database of all variations under the Vienna Game\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 21 × 25\n   Opening     Colour `Num Games` ECO   `Last Played` `Perf Rating` `Avg Player`\n   <chr>       <chr>        <dbl> <chr> <date>                <dbl>        <dbl>\n 1 Vienna Gam… black          835 C25   2018-07-09             2167         2195\n 2 Vienna Gam… black          188 C26   2018-07-01             2102         2053\n 3 Vienna Gam… white          846 C27   2018-04-29             2154         2104\n 4 Vienna Gam… white         2821 C26   2018-07-08             2293         2267\n 5 Vienna Gam… white          133 C25   2018-07-07             2219         2154\n 6 Vienna Gam… white         1012 C25   2018-07-03             2273         2228\n 7 Vienna Gam… white          527 C26   2018-06-21             2053         2008\n 8 Vienna Gam… white          100 C27   2018-03-02             2258         2231\n 9 Vienna Gam… black          124 C27   2018-04-02             2206         2243\n10 Vienna Gam… black          201 C27   2018-06-30             2103         2076\n# ℹ 11 more rows\n# ℹ 18 more variables: `Player Win %` <dbl>, `Draw %` <dbl>,\n#   `Opponent Win %` <dbl>, Moves <chr>, moves_list <chr>, move1w <chr>,\n#   move1b <chr>, move2w <chr>, move2b <chr>, move3w <chr>, move3b <chr>,\n#   move4w <chr>, move4b <chr>, `White_win%` <dbl>, `Black_win%` <dbl>,\n#   White_odds <dbl>, White_Wins <dbl>, Black_Wins <dbl>\n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}